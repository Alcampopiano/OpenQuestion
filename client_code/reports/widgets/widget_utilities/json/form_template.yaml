container:
  type: HtmlTemplate
  properties: {tooltip: '', background: '', foreground: '', border: '', visible: true,
    role: json_editor, html: "<body>\n\n<script>\n\nmake_editor = function(spec, comp,\
      \ parent) {\n  \n  \t/*\n  \t\"color-hex\" is not a supported format in avj.\n\
      \    v4 of VL's schema uses the \"color-hex\" format.\n    If I set HexColor\
      \ format to \"uri\" (which is odd) \n    \tthe schema validation loads without\
      \ error.\n    I tried deleting all references to HexColor, but still got errors,\
      \ \n    \tso, I set the format to \"uri\" and moved on with my life.\n    */\n\
      \  \n    var key = \"HexColor\"; \n    schema.definitions[key].format=\"uri\"\
      \n    //delete schema.definitions[key];\n    //delete schema.definitions.Color.anyOf[1]\n\
      \    //console.log(schema.definitions.Color)\n    //console.log(schema.definitions[key])\n\
      \n    const options = {\n      schema: schema,\n      mode: 'code',\n      modes:\
      \ ['code', 'tree'],\n      onChange: function() {\n          spec=editor.get();\n\
      \          var my_comp=comp.v._anvil.element[0]\n          anvil.call(my_comp,\
      \ \"on_editor_change\", spec)\n      },\n    };\n\n    const container = parent.v._anvil.element[0]\n\
      \    const editor = new JSONEditor(container, options, spec)\n\n};\n\n/*\nget_schema\
      \ = function(spec, comp, parent) {\n  //console.log(schema)\n  //make_editor(spec,\
      \ schema, comp, parent)\n  \n\nfetch('https://vega.github.io/schema/vega-lite/v4.json')\n\
      \  \t.then(function(resp){\n    \treturn resp.json();\n  \t})\n  \t.then(function(data)\
      \ {\n        schema=data\n  \t\tmake_editor(spec, schema, comp, parent);\n \
      \ });\n\n\n};\n*/\n</script>\n  \n</body>\n<head>\n<style type=\"text/css\"\
      >\n  \n  .jsoneditor {\n    height: 400px;\n  }\n  \n  .jsoneditor-menu {\n\
      \  background-color: white;\n}\n  \n  .jsoneditor-menu > button.jsoneditor-transform\
      \ {\n  color: black;\n  background-color: black; \n}\n  \n\n  \n  \n</style>\n\
      </head>"}
  event_bindings: {show: form_show}
components: []
is_package: true
